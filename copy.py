import os, pygame
import random as rnd 
import pandas as pd

CONFIG_FILE = "musicli-config.txt"
CACHE_FILE = "musicli-cache.csv"

class Icons: 
    def appIcon():
        print("""
    
    ‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚†ñ‚†Ç‚†â‚†â‚†â‚†Ä‚†í‚†§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚£∂‚°ü‚¢Ä‚£¥‚£∂‚£ø‚£æ‚£∂‚£∂‚£Ñ‚°Ä‚†à‚†ë‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚°¥‚£´‚£º‚°ø‚£¥‚°ü‚†õ‚†â‚†â‚†õ‚†õ‚†ø‚£ø‚£ø‚£∑‚£¶‚°Ä‚†ô‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚£º‚¢Å‚£ü‚°ü‚£∑‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£∑‚£Ü‚†à‚¢£‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢∞‚£ø‚¢º‚£ø‚£∑‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚°Ü‚†Ä‚¢±‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢∏‚°µ‚£æ‚£á‚£∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ß‚†Ä‚†Ä‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†ò‚£¥‚£ø‚¢Ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°ø‚†õ‚†â‚†π‚°Ü‚†Ä‚†Ä‚†Ä
‚¢Ä‚£º‚£ø‚£ß‚†ü‚†Å‚¢Ä‚¢Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ø‚£¥‚£∂‚£¥‚°á‚†Ä‚†Ä‚†Ä
‚¢∏‚£ø‚£º‚£ø‚£ã‚£â‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£∑‚£∑‚°Ä‚†Ä‚†Ä
‚¢∏‚†Å‚†ä‚£ø‚†õ‚¢õ‚¢ü‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚¢Ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚£®‚£∂‚°ú‚†Ç‚†à‚†Ω‚£ß‚°Ä‚†Ä
‚†∏‚£∂‚£æ‚°Ø‚†§‚¢Ñ‚°Ä‚†µ‚¢ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚°∑‚°Ñ‚†Ä‚°∞‚¢Å‚£æ‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚£ø‚°π‚°Ñ
‚†Ä‚£ø‚£°‚†¶‚¢Ñ‚°Ä‚†à‚†≥‚£¨‚£π‚£ø‚£Ü‚†Ä‚†Ä‚¢â‚†ª‚£¥‚†á‚£æ‚£ø‚°ü‚¢ª‚†Å‚†Ä‚†Ä‚†Ä‚£ø‚†Å‚°á
‚†Ä‚£ø‚°≠‚°Ä‚†Ä‚†à‚†≤‚£¶‚£∏‚£ø‚£ø‚£ø‚£ß‚£Ä‚†à‚°î‚£ú‚£¥‚£ø‚°ü‚¢Ä‚°é‚°à‚†Ä‚†Ä‚¢∞‚°ø‚¢†‚£∑
‚†Ä‚¢∏‚£ø‚£Ñ‚£í‚°Ä‚°Ä‚£ø‚£∑‚°ø‚£ø‚¢ø‚£ø‚£∑‚°∞‚°∏‚£Ø‚£è‚£ø‚°∑‚¢ã‚£º‚£Å‚°¢‚¢†‚†ü‚†Ä‚£º‚£ø
‚†Ä‚†Ä‚†ª‚£∑‚£à‚£Å‚£Æ‚¢ª‚¢∏‚°á‚¢®‚£ø‚£ø‚£ø‚£∑‚¢∂‚£ø‚£è‚£©‚£∂‚£ø‚£ø‚£ø‚£ø‚°Ø‚£§‚£¥‚£ø‚†É
‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚£ø‚£ø‚£Ω‚£Ω‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚°∂‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä‚†ò‚†ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä
    
        """)
        def playing():
            print("""
                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                ‚£ø‚£ø‚£ø‚£ø           ‚ñ∂ ùó°ùóºùòÑ ùó£ùóπùóÆùòÜùó∂ùóªùó¥ -- 
                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                ‚£ø‚£ø
                ‚£ø
            """)

def setup():
    path = input("Enter the path of your music directory: ")
    with open(CONFIG_FILE, "w") as config_file:
        config_file.write(path)

def main():
    if not os.path.exists(CONFIG_FILE):
        setup()

    with open(CONFIG_FILE, "r") as config_file:
        path = config_file.read().strip()

    if os.path.exists(CACHE_FILE):
        album_dict = read_csv(CACHE_FILE)
    
    if not os.path.exists(CACHE_FILE):
        album_dict = get_albums(path) # why re-assign path to music_folder?
        createCSVCache(album_dict)
    
    while True:
        Icons.appIcon()
        opt= int(input(print("\t1. Search for an album\n\t2. Search for a song\n\t3. Refresh Cache\n\t9. Exit\nEnter your option: ")))

        if(opt == 1):
            print("Album: ")
        elif(opt == 2):
            print("Songs: ")
        elif(opt == 3):
            print("Refresh Cache")
        else:
            break

    

if __name__ == "__main__":
    print("main function")